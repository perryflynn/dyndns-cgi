
error_page 418 = @ddns1;
error_page 419 = @ddns2;

# dyndns 1 and 2 endpoints
location ~ /nic/(?<ddnsmode>update|dyndns) {

    # extract username from header
    set_by_lua_block $authuser {
        local authheader = ngx.req.get_headers()['Authorization']
        if authheader ~= nil then
            local authinfo = ngx.decode_base64(string.sub(authheader, 7))
            return string.gmatch(authinfo, '([^:]+)')()
        end
        return "";
    }

    # extract password from header
    set_by_lua_block $authpass {
        local authheader = ngx.req.get_headers()['Authorization']
        if authheader ~= nil then
            local authinfo = ngx.decode_base64(string.sub(authheader, 7))
            return string.gmatch(authinfo, '[^:]+:(.+)')()
        end
        return "";
    }

    # use dyndns1
    if ($ddnsmode = "dyndns") {
        return 418;
    }

    # use dyndns2
    if ($ddnsmode = "update") {
        return 419;
    }

}

# dyndns1 specification
location @ddns1 {
    rewrite ^ /cgi-bin/dyndns.cgi?username=$authuser&password=$authpass&domain=$arg_host_id&mode=parameter&ip=$arg_myip last;
}

# dyndns2 specification
location @ddns2 {
    rewrite ^ /cgi-bin/dyndns.cgi?username=$authuser&password=$authpass&domain=$arg_hostname&mode=parameter&ip=$arg_myip last;
}

location /cgi-bin {
    # https://techexpert.tips/de/nginx-de/nginx-shell-skript-cgi/
    gzip off;
    root  /var/www/html;
    index index.cgi;
    fastcgi_index index.cgi;
    fastcgi_pass  unix:/var/run/fcgiwrap.socket;
    include /etc/nginx/fastcgi_params;

    # shell scripts are located in /var/www/html/cgi-bin
    fastcgi_param SCRIPT_FILENAME  /var/www/html$fastcgi_script_name;

    # map GET arguments to ENV variables for the shell scripts
    access_by_lua_block {
        local args = ngx.req.get_uri_args()
        for key, val in pairs(args) do
            ngx.req.set_header("x-args-" .. key, ngx.unescape_uri(val))
        end
    }
}
